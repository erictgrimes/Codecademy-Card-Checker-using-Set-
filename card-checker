// All valid credit card numbers
const valid1 = [4, 5, 3, 9, 6, 7, 7, 9, 0, 8, 0, 1, 6, 8, 0, 8]
const valid2 = [5, 5, 3, 5, 7, 6, 6, 7, 6, 8, 7, 5, 1, 4, 3, 9]
const valid3 = [3, 7, 1, 6, 1, 2, 0, 1, 9, 9, 8, 5, 2, 3, 6]
const valid4 = [6, 0, 1, 1, 1, 4, 4, 3, 4, 0, 6, 8, 2, 9, 0, 5]
const valid5 = [4, 5, 3, 9, 4, 0, 4, 9, 6, 7, 8, 6, 9, 6, 6, 6]

// All invalid credit card numbers
const invalid1 = [4, 5, 3, 2, 7, 7, 8, 7, 7, 1, 0, 9, 1, 7, 9, 5]
const invalid2 = [5, 7, 9, 5, 5, 9, 3, 3, 9, 2, 1, 3, 4, 6, 4, 3]
const invalid3 = [3, 7, 5, 7, 9, 6, 0, 8, 4, 4, 5, 9, 9, 1, 4]
const invalid4 = [6, 0, 1, 1, 1, 2, 7, 9, 6, 1, 7, 7, 7, 9, 3, 5]
const invalid5 = [5, 3, 8, 2, 0, 1, 9, 7, 7, 2, 8, 8, 3, 8, 5, 4]

// Can be either valid or invalid
const mystery1 = [3, 4, 4, 8, 0, 1, 9, 6, 8, 3, 0, 5, 4, 1, 4]
const mystery2 = [5, 4, 6, 6, 1, 0, 0, 8, 6, 1, 6, 2, 0, 2, 3, 9]
const mystery3 = [6, 0, 1, 1, 3, 7, 7, 0, 2, 0, 9, 6, 2, 6, 5, 6, 2, 0, 3]
const mystery4 = [4, 9, 2, 9, 8, 7, 7, 1, 6, 9, 2, 1, 7, 0, 9, 3]
const mystery5 = [4, 9, 1, 3, 5, 4, 0, 4, 6, 3, 0, 7, 2, 5, 2, 3]

// An array of all the arrays above
const batch = [valid1, valid2, valid3, valid4, valid5, invalid1, invalid2, invalid3, invalid4, invalid5, mystery1, mystery2, mystery3, mystery4, mystery5]


//global variables
let invalidArray = [];
let allCompanies = new Set(); // set will be used later to filter out duplicates
let companies;
let convertedFromString = [];

//checks to see if credit card number is valid
let validateCred = array => {
	let holderArray = [];
	let sum = 0;
	for (let i = array.length - 2; i >= 0; i = i - 2){
		if (array[i] > 4){
			holderArray.unshift((array[i] * 2) - 9); //this line only meant to test each number is correctly translated
			sum = sum + (array[i] * 2) - 9;
		} else {
			holderArray.unshift(array[i] * 2);
			sum = (array[i] * 2) + sum;
		}
		
	}
	for (let j = array.length - 1; j >= 0; j = j - 2){
		holderArray.unshift(array[j]);
		sum = sum + array[j];
	}
	if (sum % 10 === 0){
			return true;
		} else {
			return false;
		}``
}

// returns array of invalid cards
let findInvalidCards = arr =>{
	for (let i = 0; i < arr.length; i++){
		if (validateCred(arr[i]) === false){
			invalidArray.push(arr[i]);
	}
		}
	return invalidArray;
}

//checks the unique first number of each invalid card and returns the 'companies' with invalid cards sent out
let idInvalidCardCompanies = cards => {
	for (let i = 0; i < cards.length; i++){
		if (cards[i][0] === 3){
			allCompanies.add('Amex');
		} else if (cards[i][0] === 4) {
			allCompanies.add('Visa');
		} else if (cards[i][0] === 5){
			allCompanies.add('Mastercard');
		} else if (cards[i][0] === 6){
			allCompanies.add('Discover');
		} else {
			console.log(`Company not found at index ${cards.indexOf(cards[i])}`);
		}
	}

	companies = Array.from(allCompanies); //converts set object to an array
	return companies;
}

//converts the string of number to a separated array of numbers
let stringToArray = string => {
	let arrayOfNumbers = [];
	for (let i = 0; i < string.length; i++){
		arrayOfNumbers.push(Number(string[i]));
	}
	convertedFromString.push(arrayOfNumbers);
	return convertedFromString;
}

console.log(idInvalidCardCompanies(findInvalidCards(stringToArray('3024007175004596'))));
console.log(idInvalidCardCompanies(findInvalidCards(batch)));
